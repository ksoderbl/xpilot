
Installation and Notes for the OS/2 version Xpilot
==================================================

Xpilot was originally ported to OS/2 at version 3.7.1, in February, 1998.
The authors and maintainers of Xpilot were quick to welcome this port
into the official Xpilot code line, and therefore all future versions should
also be available on the OS/2 platform.

The current release (4.0.0) has been tested on EMX 0.9c with fix 3 and
XFree86/OS2 version 3.3.1.

Compilation and Installation
----------------------------

The xpilot Imake system has not been configured for OS/2!  If
someone else wants to do this, please do, and let me know so I can
put it into the distribution.

To compile xpilot, xpilots, and xp-replay for XFree86/2, you
will need the EMX port of the GNU compiler as well as XFree86/2.
HPFS is required.

Be sure that the two environment variables X11ROOT and LIBRARY_PATH
are set correctly, e.g. SET X11ROOT=e: and SET LIBRARY_PATH=e:/emx/lib,
in your config.sys.

Once those two packages are installed correctly, change directories
to ./src, and type:

[e:\xpilot-4.0.0\src]  make -e -f Makefile.std os2

This will compile the xpilot server, the xpilot client, and
the xp-replay utility.  There is no "make install"- the three
executables will be left in the ./src/client, ./src/server, and
./src/replay directories.  You may copy or move them to any
directory of your choosing.

The xpilot client will look for (or create) your .xpilotrc
file in your $(HOME) directory.

If you wish to compile xmapedit, change directories to ./src/mapedit,
and edit Makefile.dist.  Modify the following three macro definitions
(near the top) to read (with the appropriate drive letter change):

FLAGS         = -O2 -Wall -Zexe -Zbin-files
INCLDIR       = -Ie:/xfree86/include -Ie:/emx/include
LIBDIR        = -Le:/xfree86/lib

Then type:

[e:\xpilot-4.0.0\src\mapedit]  make -f Makefile.dist


Notes
-----

If you have a directory of maps, and would like xpilots to look
there for them, you will also have to define the macro LIBDIR
to point to the appropriate directory (see Makefile.std for this
and more macro defs).

The xpilot server requires a fairly quick timing mechanism.  I've
implemented this with DosStartTimer in this port.  The bottom line
is that unless you are running the server on a fairly fast box
(Pentium 150 or above) you will most likely notice that the game
is quite choppy, especially if you are running the server and client
on the same machine.  If you do run both on one machine, I'd suggest
starting the client at time-critical priority with a program like
nice.exe (see hobbes.nmsu.edu).  I am looking into ways to resolve
this problem.

Sound is not supported.

If you have any problems, comments, etc., on this port, please
feel free to contact me at the address below.

Enjoy!
--
R. Korte  (rkorte@psu.edu)
April, 1998
