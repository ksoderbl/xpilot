/* $Id: Imakefile,v 1.7 1993/04/22 16:13:44 bjoerns Exp $
 *
 *      This file is part of the XPilot project, written by
 *
 *          Bjørn Stabell (bjoerns@staff.cs.uit.no)
 *          Ken Ronny Schouten (kenrsc@stud.cs.uit.no)
 *
 *      Copylefts are explained in the LICENSE file.
 */

#
# Imakefile - XPilot
# $Header: /users/staff/bjoerns/src/cvs/xpilot/src/Imakefile,v 1.7 1993/04/22 16:13:44 bjoerns Exp $
#

/*
 * Specify an ANSI compiler.
 */
CC = cc -Aa -D_HPUX_SOURCE		# HPUX
#CC = gcc -nostdin -ansi		# Sun's with gcc
#CC = acc -fast
#CC = cc -xansi -D__STDC__		# SGI Indigo?
#CC = cc -std1				# DEC/OSF1
#CC = gcc
#CC = c89				# DEC/ULTRIX 4.2 with c89 compiler kit

/*
 * DEFS should be used for program specific defines.
 * Currently supported flags are:
 *
 *  LIMIT_ACCESS    - extremely local, cannot be used without modification.
 *  LOG             - try to log every server start
 *  SCROLL          - scroll a message in the window title, this is intended
 *                    for you people who really wanna burn CPU cycles.
 *  DRAW_GRAV_VECTORS   - slows the game down to an unbearable speed, you
 *                        might try it once, the effect is quite... er...
 *  TURN_THRUST     - makes turning drain fuel and gives you a nice spark...
 *  CHEAT           - define this for fun, but don't make it a habit... :)
 *  SILENT          - makes the server real silent.
 *
 * You should also set these appropriately (see config.h):
 *
 *  LOCALGURU           - define to the person in charge of xpilot on this site.
 *  LIBDIR              - define to where you want the help-files etc.
 *                        (HELPFILE, MOTDFILE, LOGFILE and MAPDIR)
 *  XHOST               - Do and xhost +serverhost and xhost -serverhost if
 *                        the server couldn't open your display. (see config.h)
 *  UPDATES_PR_FRAME=1  - number of 'ticks' per drawing (1 is default).
 */
DEFS =

/*
 * CDEBUGFLAGS should specify optimalization or debug information (or both).
 */
#CDEBUGFLAGS = +O3 +OS +ESlit		/* HPUX cc optimize flags */
CDEBUGFLAGS = -g -z +w1			/* HPUX cc debug flags */
#CDEBUGFLAGS = -O			/* General optimize flag */

/*
 * For sound support (requires rplay 3.0), you must uncomment the
 * following lines.
 */
/* #define USE_SOUND			/* Uncomment for rplay sound support */
/* RPLAYLIB = -L/usr/local/lib -lrplay	/* Where's your rplaylib (sound sup) */

/*
 * Miscellaneous...
 */
USLEEP_OBJ = usleep.o			/* Uncomment if you lack usleep() */
/* STRCASECMP_OBJ = strcasecmp.o	/* Uncomment if you lack strcasecmp()*/
/* CCOPTIONS = -I/usr/local/include	/* You might need this one */




############### DO NOT TOUCH ANYTHING BELOW THIS LINE #####################

#if defined(USE_SOUND)
  RPLAYOBJS = sound.o
  DEFINES = $(DEFS) -DSOUND
#else
  RPLAYLIB =
  RPLAYOBJS =
  DEFINES = $(DEFS)
#endif

MATHLIB = -lm

#
# 'Server' program, xpilots, object and source files
#
OBJS1 = server.o xinit.o dbuff.o draw.o event.o map.o math.o cmdline.o \
        play.o player.o rules.o update.o collision.o default.o error.o \
        robot.o option.o timer.o socklib.o                             \
        $(RPLAY_OBJS) $(USLEEP_OBJ) $(STRCASECMP_OBJ)
SRCS1 = server.c xinit.c dbuff.c draw.c event.c map.c math.c cmdline.c \
        play.c player.c rules.c update.c collision.c default.c error.c \
        robot.c option.c timer.c socklib.c
#
# Hand-shake program, xpilot, object and source files
#
OBJS2 = xpilot.o syslimit.o error.o socklib.o $(USLEEP_OBJ)
SRCS2 = xpilot.c syslimit.c error.c socklib.c

#
#
# Make handshake and server program
#
AllTarget(xpilot xpilots)

ComplexProgramTarget_1(xpilots, , $(RPLAYLIB) $(MATHLIB) $(XLIB))
ComplexProgramTarget_2(xpilot, , )

#
#
# Special rules
#
etags::
	etags -t *.[chips]
